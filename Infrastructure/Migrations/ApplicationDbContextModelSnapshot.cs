// <auto-generated />
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Films", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Produccer_id")
                        .HasColumnType("int");

                    b.Property<int>("Reyting")
                        .HasColumnType("int");

                    b.Property<string>("Strana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zhanr_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Produccer_id");

                    b.HasIndex("Zhanr_id");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("Domain.Entities.Producer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StazhRaboty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tematika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("produccers");
                });

            modelBuilder.Entity("Domain.Entities.Prosmotry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FilmsId")
                        .HasColumnType("int");

                    b.Property<string>("Kol_vo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ocenki")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmsId");

                    b.HasIndex("UserId");

                    b.ToTable("prosmotries");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Domain.Entities.Zhanr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nazvanie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("zhanrs");
                });

            modelBuilder.Entity("Domain.Entities.Films", b =>
                {
                    b.HasOne("Domain.Entities.Producer", "Produccers")
                        .WithMany("Films")
                        .HasForeignKey("Produccer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Zhanr", "Zhanrs")
                        .WithMany("Films")
                        .HasForeignKey("Zhanr_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produccers");

                    b.Navigation("Zhanrs");
                });

            modelBuilder.Entity("Domain.Entities.Prosmotry", b =>
                {
                    b.HasOne("Domain.Entities.Films", "Films")
                        .WithMany("Prosmotrys")
                        .HasForeignKey("FilmsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "Users")
                        .WithMany("Prosmotrys")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Films");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Domain.Entities.Films", b =>
                {
                    b.Navigation("Prosmotrys");
                });

            modelBuilder.Entity("Domain.Entities.Producer", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Prosmotrys");
                });

            modelBuilder.Entity("Domain.Entities.Zhanr", b =>
                {
                    b.Navigation("Films");
                });
#pragma warning restore 612, 618
        }
    }
}
